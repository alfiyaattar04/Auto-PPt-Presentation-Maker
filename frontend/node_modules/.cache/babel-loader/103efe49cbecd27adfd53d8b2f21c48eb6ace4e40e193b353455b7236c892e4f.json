{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 60000,\n  // 60 seconds timeout for generation\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3, _error$response3$data;\n  console.error('API Error:', error);\n  if (error.code === 'ECONNABORTED') {\n    throw new Error('Request timed out. Please try again with shorter content.');\n  }\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 413) {\n    throw new Error('File too large. Please use a smaller template file.');\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) >= 500) {\n    throw new Error('Server error. Please try again later.');\n  }\n  if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.error) {\n    throw new Error(error.response.data.error);\n  }\n  throw new Error(error.message || 'An unexpected error occurred');\n});\nexport const generatePresentation = {\n  // Analyze text and create slide structure\n  analyzeText: async ({\n    text,\n    guidance,\n    provider,\n    apiKey\n  }) => {\n    try {\n      const response = await api.post('/api/analyze-text', {\n        text,\n        guidance,\n        provider,\n        apiKey\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Text analysis failed:', error);\n      throw error;\n    }\n  },\n  // Analyze uploaded template\n  analyzeTemplate: async (templateFile, sessionId) => {\n    try {\n      const formData = new FormData();\n      formData.append('template', templateFile);\n      formData.append('session_id', sessionId);\n      const response = await api.post('/api/analyze-template', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Template analysis failed:', error);\n      throw error;\n    }\n  },\n  // Generate speaker notes\n  generateSpeakerNotes: async ({\n    session_id,\n    provider,\n    apiKey\n  }) => {\n    try {\n      const response = await api.post('/api/generate-speaker-notes', {\n        session_id,\n        provider,\n        apiKey\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Speaker notes generation failed:', error);\n      throw error;\n    }\n  },\n  // Generate final presentation\n  generatePresentation: async ({\n    session_id,\n    options\n  }) => {\n    try {\n      const response = await api.post('/api/generate-presentation', {\n        session_id,\n        options\n      }, {\n        responseType: 'blob',\n        // Important for file download\n        timeout: 120000 // 2 minutes for generation\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Presentation generation failed:', error);\n      throw error;\n    }\n  },\n  // Health check\n  healthCheck: async () => {\n    try {\n      const response = await api.get('/api/health');\n      return response.data;\n    } catch (error) {\n      console.error('Health check failed:', error);\n      throw error;\n    }\n  }\n};\n\n// Utility functions\nexport const utils = {\n  // Validate API key format\n  validateApiKey: (apiKey, provider) => {\n    if (!apiKey) return {\n      valid: false,\n      message: 'API key is required'\n    };\n    const patterns = {\n      openai: /^sk-[a-zA-Z0-9]{32,}$/,\n      anthropic: /^sk-ant-[a-zA-Z0-9\\-_]{32,}$/,\n      gemini: /^AIza[a-zA-Z0-9\\-_]{35}$/\n    };\n    const pattern = patterns[provider];\n    if (pattern && !pattern.test(apiKey)) {\n      return {\n        valid: false,\n        message: `Invalid ${provider} API key format`\n      };\n    }\n    return {\n      valid: true,\n      message: ''\n    };\n  },\n  // Format file size\n  formatFileSize: bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  },\n  // Estimate reading time\n  estimateReadingTime: text => {\n    const wordsPerMinute = 200;\n    const words = text.trim().split(/\\s+/).length;\n    return Math.ceil(words / wordsPerMinute);\n  },\n  // Estimate slide count from text\n  estimateSlideCount: text => {\n    const words = text.trim().split(/\\s+/).length;\n    // Rough estimate: 150-200 words per slide\n    return Math.max(1, Math.ceil(words / 175));\n  },\n  // Download file with error handling\n  downloadFile: (blob, filename) => {\n    try {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(link);\n      return true;\n    } catch (error) {\n      console.error('Download failed:', error);\n      return false;\n    }\n  },\n  // Debounce function for input handling\n  debounce: (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  },\n  // Local storage helpers (with error handling)\n  storage: {\n    get: (key, defaultValue = null) => {\n      try {\n        const item = localStorage.getItem(key);\n        return item ? JSON.parse(item) : defaultValue;\n      } catch {\n        return defaultValue;\n      }\n    },\n    set: (key, value) => {\n      try {\n        localStorage.setItem(key, JSON.stringify(value));\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    remove: key => {\n      try {\n        localStorage.removeItem(key);\n        return true;\n      } catch {\n        return false;\n      }\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","response","use","error","_error$response","_error$response2","_error$response3","_error$response3$data","console","code","Error","status","data","message","generatePresentation","analyzeText","text","guidance","provider","apiKey","post","analyzeTemplate","templateFile","sessionId","formData","FormData","append","generateSpeakerNotes","session_id","options","responseType","healthCheck","get","utils","validateApiKey","valid","patterns","openai","anthropic","gemini","pattern","test","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","estimateReadingTime","wordsPerMinute","words","trim","split","length","ceil","estimateSlideCount","max","downloadFile","blob","filename","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","debounce","func","wait","executedFunction","args","later","clearTimeout","setTimeout","storage","key","defaultValue","item","localStorage","getItem","JSON","parse","set","value","setItem","stringify","remove","removeItem"],"sources":["C:/Projects/auto-presentation-generator/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000, // 60 seconds timeout for generation\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    \r\n    if (error.code === 'ECONNABORTED') {\r\n      throw new Error('Request timed out. Please try again with shorter content.');\r\n    }\r\n    \r\n    if (error.response?.status === 413) {\r\n      throw new Error('File too large. Please use a smaller template file.');\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      throw new Error('Server error. Please try again later.');\r\n    }\r\n    \r\n    if (error.response?.data?.error) {\r\n      throw new Error(error.response.data.error);\r\n    }\r\n    \r\n    throw new Error(error.message || 'An unexpected error occurred');\r\n  }\r\n);\r\n\r\nexport const generatePresentation = {\r\n  // Analyze text and create slide structure\r\n  analyzeText: async ({ text, guidance, provider, apiKey }) => {\r\n    try {\r\n      const response = await api.post('/api/analyze-text', {\r\n        text,\r\n        guidance,\r\n        provider,\r\n        apiKey\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Text analysis failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Analyze uploaded template\r\n  analyzeTemplate: async (templateFile, sessionId) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('template', templateFile);\r\n      formData.append('session_id', sessionId);\r\n\r\n      const response = await api.post('/api/analyze-template', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Template analysis failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Generate speaker notes\r\n  generateSpeakerNotes: async ({ session_id, provider, apiKey }) => {\r\n    try {\r\n      const response = await api.post('/api/generate-speaker-notes', {\r\n        session_id,\r\n        provider,\r\n        apiKey\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Speaker notes generation failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Generate final presentation\r\n  generatePresentation: async ({ session_id, options }) => {\r\n    try {\r\n      const response = await api.post('/api/generate-presentation', {\r\n        session_id,\r\n        options\r\n      }, {\r\n        responseType: 'blob', // Important for file download\r\n        timeout: 120000, // 2 minutes for generation\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Presentation generation failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Health check\r\n  healthCheck: async () => {\r\n    try {\r\n      const response = await api.get('/api/health');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Health check failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Utility functions\r\nexport const utils = {\r\n  // Validate API key format\r\n  validateApiKey: (apiKey, provider) => {\r\n    if (!apiKey) return { valid: false, message: 'API key is required' };\r\n    \r\n    const patterns = {\r\n      openai: /^sk-[a-zA-Z0-9]{32,}$/,\r\n      anthropic: /^sk-ant-[a-zA-Z0-9\\-_]{32,}$/,\r\n      gemini: /^AIza[a-zA-Z0-9\\-_]{35}$/\r\n    };\r\n\r\n    const pattern = patterns[provider];\r\n    if (pattern && !pattern.test(apiKey)) {\r\n      return { \r\n        valid: false, \r\n        message: `Invalid ${provider} API key format` \r\n      };\r\n    }\r\n\r\n    return { valid: true, message: '' };\r\n  },\r\n\r\n  // Format file size\r\n  formatFileSize: (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  },\r\n\r\n  // Estimate reading time\r\n  estimateReadingTime: (text) => {\r\n    const wordsPerMinute = 200;\r\n    const words = text.trim().split(/\\s+/).length;\r\n    return Math.ceil(words / wordsPerMinute);\r\n  },\r\n\r\n  // Estimate slide count from text\r\n  estimateSlideCount: (text) => {\r\n    const words = text.trim().split(/\\s+/).length;\r\n    // Rough estimate: 150-200 words per slide\r\n    return Math.max(1, Math.ceil(words / 175));\r\n  },\r\n\r\n  // Download file with error handling\r\n  downloadFile: (blob, filename) => {\r\n    try {\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(link);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Download failed:', error);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  // Debounce function for input handling\r\n  debounce: (func, wait) => {\r\n    let timeout;\r\n    return function executedFunction(...args) {\r\n      const later = () => {\r\n        clearTimeout(timeout);\r\n        func(...args);\r\n      };\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n  },\r\n\r\n  // Local storage helpers (with error handling)\r\n  storage: {\r\n    get: (key, defaultValue = null) => {\r\n      try {\r\n        const item = localStorage.getItem(key);\r\n        return item ? JSON.parse(item) : defaultValue;\r\n      } catch {\r\n        return defaultValue;\r\n      }\r\n    },\r\n\r\n    set: (key, value) => {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    remove: (key) => {\r\n      try {\r\n        localStorage.removeItem(key);\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;EACTC,OAAO,CAACL,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAElC,IAAIA,KAAK,CAACM,IAAI,KAAK,cAAc,EAAE;IACjC,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EAEA,IAAI,EAAAN,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBO,MAAM,MAAK,GAAG,EAAE;IAClC,MAAM,IAAID,KAAK,CAAC,qDAAqD,CAAC;EACxE;EAEA,IAAI,EAAAL,gBAAA,GAAAF,KAAK,CAACF,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBM,MAAM,KAAI,GAAG,EAAE;IACjC,MAAM,IAAID,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EAEA,KAAAJ,gBAAA,GAAIH,KAAK,CAACF,QAAQ,cAAAK,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBM,IAAI,cAAAL,qBAAA,eAApBA,qBAAA,CAAsBJ,KAAK,EAAE;IAC/B,MAAM,IAAIO,KAAK,CAACP,KAAK,CAACF,QAAQ,CAACW,IAAI,CAACT,KAAK,CAAC;EAC5C;EAEA,MAAM,IAAIO,KAAK,CAACP,KAAK,CAACU,OAAO,IAAI,8BAA8B,CAAC;AAClE,CACF,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG;EAClC;EACAC,WAAW,EAAE,MAAAA,CAAO;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAO,CAAC,KAAK;IAC3D,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMN,GAAG,CAACyB,IAAI,CAAC,mBAAmB,EAAE;QACnDJ,IAAI;QACJC,QAAQ;QACRC,QAAQ;QACRC;MACF,CAAC,CAAC;MACF,OAAOlB,QAAQ,CAACW,IAAI;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAkB,eAAe,EAAE,MAAAA,CAAOC,YAAY,EAAEC,SAAS,KAAK;IAClD,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,YAAY,CAAC;MACzCE,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEH,SAAS,CAAC;MAExC,MAAMtB,QAAQ,GAAG,MAAMN,GAAG,CAACyB,IAAI,CAAC,uBAAuB,EAAEI,QAAQ,EAAE;QACjEzB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOE,QAAQ,CAACW,IAAI;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAwB,oBAAoB,EAAE,MAAAA,CAAO;IAAEC,UAAU;IAAEV,QAAQ;IAAEC;EAAO,CAAC,KAAK;IAChE,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMN,GAAG,CAACyB,IAAI,CAAC,6BAA6B,EAAE;QAC7DQ,UAAU;QACVV,QAAQ;QACRC;MACF,CAAC,CAAC;MACF,OAAOlB,QAAQ,CAACW,IAAI;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAW,oBAAoB,EAAE,MAAAA,CAAO;IAAEc,UAAU;IAAEC;EAAQ,CAAC,KAAK;IACvD,IAAI;MACF,MAAM5B,QAAQ,GAAG,MAAMN,GAAG,CAACyB,IAAI,CAAC,4BAA4B,EAAE;QAC5DQ,UAAU;QACVC;MACF,CAAC,EAAE;QACDC,YAAY,EAAE,MAAM;QAAE;QACtBhC,OAAO,EAAE,MAAM,CAAE;MACnB,CAAC,CAAC;MAEF,OAAOG,QAAQ,CAACW,IAAI;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA4B,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAM9B,QAAQ,GAAG,MAAMN,GAAG,CAACqC,GAAG,CAAC,aAAa,CAAC;MAC7C,OAAO/B,QAAQ,CAACW,IAAI;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAM8B,KAAK,GAAG;EACnB;EACAC,cAAc,EAAEA,CAACf,MAAM,EAAED,QAAQ,KAAK;IACpC,IAAI,CAACC,MAAM,EAAE,OAAO;MAAEgB,KAAK,EAAE,KAAK;MAAEtB,OAAO,EAAE;IAAsB,CAAC;IAEpE,MAAMuB,QAAQ,GAAG;MACfC,MAAM,EAAE,uBAAuB;MAC/BC,SAAS,EAAE,8BAA8B;MACzCC,MAAM,EAAE;IACV,CAAC;IAED,MAAMC,OAAO,GAAGJ,QAAQ,CAAClB,QAAQ,CAAC;IAClC,IAAIsB,OAAO,IAAI,CAACA,OAAO,CAACC,IAAI,CAACtB,MAAM,CAAC,EAAE;MACpC,OAAO;QACLgB,KAAK,EAAE,KAAK;QACZtB,OAAO,EAAE,WAAWK,QAAQ;MAC9B,CAAC;IACH;IAEA,OAAO;MAAEiB,KAAK,EAAE,IAAI;MAAEtB,OAAO,EAAE;IAAG,CAAC;EACrC,CAAC;EAED;EACA6B,cAAc,EAAGC,KAAK,IAAK;IACzB,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;IACjC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;IACnD,OAAOM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;EACzE,CAAC;EAED;EACAO,mBAAmB,EAAGrC,IAAI,IAAK;IAC7B,MAAMsC,cAAc,GAAG,GAAG;IAC1B,MAAMC,KAAK,GAAGvC,IAAI,CAACwC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM;IAC7C,OAAOX,IAAI,CAACY,IAAI,CAACJ,KAAK,GAAGD,cAAc,CAAC;EAC1C,CAAC;EAED;EACAM,kBAAkB,EAAG5C,IAAI,IAAK;IAC5B,MAAMuC,KAAK,GAAGvC,IAAI,CAACwC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM;IAC7C;IACA,OAAOX,IAAI,CAACc,GAAG,CAAC,CAAC,EAAEd,IAAI,CAACY,IAAI,CAACJ,KAAK,GAAG,GAAG,CAAC,CAAC;EAC5C,CAAC;EAED;EACAO,YAAY,EAAEA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAChC,IAAI;MACF,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAC5C,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,QAAQ,GAAGT,QAAQ;MACxBM,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZV,MAAM,CAACC,GAAG,CAACU,eAAe,CAACZ,GAAG,CAAC;MAC/BK,QAAQ,CAACI,IAAI,CAACI,WAAW,CAACT,IAAI,CAAC;MAC/B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOlE,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,OAAO,KAAK;IACd;EACF,CAAC;EAED;EACA4E,QAAQ,EAAEA,CAACC,IAAI,EAAEC,IAAI,KAAK;IACxB,IAAInF,OAAO;IACX,OAAO,SAASoF,gBAAgBA,CAAC,GAAGC,IAAI,EAAE;MACxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;QAClBC,YAAY,CAACvF,OAAO,CAAC;QACrBkF,IAAI,CAAC,GAAGG,IAAI,CAAC;MACf,CAAC;MACDE,YAAY,CAACvF,OAAO,CAAC;MACrBA,OAAO,GAAGwF,UAAU,CAACF,KAAK,EAAEH,IAAI,CAAC;IACnC,CAAC;EACH,CAAC;EAED;EACAM,OAAO,EAAE;IACPvD,GAAG,EAAEA,CAACwD,GAAG,EAAEC,YAAY,GAAG,IAAI,KAAK;MACjC,IAAI;QACF,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC;QACtC,OAAOE,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAGD,YAAY;MAC/C,CAAC,CAAC,MAAM;QACN,OAAOA,YAAY;MACrB;IACF,CAAC;IAEDM,GAAG,EAAEA,CAACP,GAAG,EAAEQ,KAAK,KAAK;MACnB,IAAI;QACFL,YAAY,CAACM,OAAO,CAACT,GAAG,EAAEK,IAAI,CAACK,SAAS,CAACF,KAAK,CAAC,CAAC;QAChD,OAAO,IAAI;MACb,CAAC,CAAC,MAAM;QACN,OAAO,KAAK;MACd;IACF,CAAC;IAEDG,MAAM,EAAGX,GAAG,IAAK;MACf,IAAI;QACFG,YAAY,CAACS,UAAU,CAACZ,GAAG,CAAC;QAC5B,OAAO,IAAI;MACb,CAAC,CAAC,MAAM;QACN,OAAO,KAAK;MACd;IACF;EACF;AACF,CAAC;AAED,eAAe7F,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}